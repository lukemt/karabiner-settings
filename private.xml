<?xml version="1.0"?>
<root>
	<!-- 
	#HowTo get character names: 
		Event Viewer: See Icon. 
		And: https://github.com/tekezo/Karabiner/blob/master/src/bridge/generator/keycode/data/KeyCode.data 
	settings file: 
		/Users/Mainuser/Library/Application Support/Karabiner/private.xml</name>
    -->

  <item>
    <name>Delete with ö</name>
    <identifier>private.del_with_oe_uml</identifier>
    <autogen>__KeyToKey__ KeyCode::GERMAN_O_UMLAUT, VK_OPTION, KeyCode::GERMAN_O_UMLAUT</autogen>
    <autogen>__KeyToKey__ KeyCode::GERMAN_O_UMLAUT, KeyCode::DELETE</autogen>
  </item>

  <item>
    <name>Some Space Remaps</name>
    <identifier>private.some_remaps</identifier>

    <!-- copy & paste, deactivated because of terminal usage of control + c and x 
    <autogen>__KeyToKey__ KeyCode::X, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
    <autogen>__KeyToKey__ KeyCode::C, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
    <autogen>__KeyToKey__ KeyCode::V, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
    -->

    <autogen>__KeyToKey__ KeyCode::T, VK_CONTROL, KeyCode::T, ModifierFlag::COMMAND_L</autogen>

    <!-- Browser Zoom -->
    <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L</autogen>
    <autogen>__KeyToKey__ KeyCode::D, VK_CONTROL, KeyCode::SLASH, ModifierFlag::COMMAND_L</auto>

    <!-- Space + n  to  new line -->
    <autogen>__KeyToKey__ KeyCode::N, VK_CONTROL, KeyCode::RETURN</autogen>

    <!-- Sonderzeichen []|{}' -->
    <autogen>__KeyToKey__ KeyCode::5, VK_CONTROL, KeyCode::5, ModifierFlag::OPTION_L</autogen>
    <autogen>__KeyToKey__ KeyCode::6, VK_CONTROL, KeyCode::6, ModifierFlag::OPTION_L</autogen>
    <autogen>__KeyToKey__ KeyCode::7, VK_CONTROL, KeyCode::7, ModifierFlag::OPTION_L</autogen>
    <autogen>__KeyToKey__ KeyCode::8, VK_CONTROL, KeyCode::8, ModifierFlag::OPTION_L</autogen>
    <autogen>__KeyToKey__ KeyCode::9, VK_CONTROL, KeyCode::9, ModifierFlag::OPTION_L</autogen>
    <autogen>__KeyToKey__ KeyCode::EQUAL, VK_CONTROL, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L</autogen>

    <!-- "<>" and "-" to SHIFT -->
    <autogen>__KeyToKey__ KeyCode::GERMAN_LESS_THAN, KeyCode::SHIFT_L</autogen>
    <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::SHIFT_R</autogen>

    <!-- "0" "ß" to "<" ">" -->
    <autogen>__KeyToKey__ KeyCode::0, VK_CONTROL, KeyCode::GERMAN_LESS_THAN</autogen>
    <autogen>__KeyToKey__ KeyCode::MINUS, VK_CONTROL, KeyCode::GERMAN_LESS_THAN, ModifierFlag::SHIFT_L</autogen>

    <!-- Space + ä to ä -->
    <autogen>__KeyToKey__ KeyCode::GERMAN_A_UMLAUT, VK_CONTROL, KeyCode::GERMAN_A_UMLAUT</autogen>
    <!-- Alt + ä to ä -->
    <autogen>__KeyToKey__ KeyCode::GERMAN_A_UMLAUT, VK_OPTION, KeyCode::GERMAN_A_UMLAUT</autogen>
    <!-- "äÄ" to "-_" -->
    <autogen>__KeyToKey__ KeyCode::GERMAN_A_UMLAUT, KeyCode::SLASH</autogen>
  </item>


  <item>
    <name>Shifts to Parentheses</name>
    <appendix>When pressed alone, Left Shift types left paren (</appendix>
    <appendix>When pressed alone, Right Shift types right paren )</appendix>
    <appendix>When used with other keys, they're normal Shifts.</appendix>
    <identifier>private.programmer.shifts_parens</identifier>

    <modifier_not>
      ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
      ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
      ModifierFlag::FN,
      ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
    </modifier_not>

    <!-- Pushing Shifts together produces () -->
    <autogen>
      __KeyToKey__
      KeyCode::SHIFT_L, ModifierFlag::SHIFT_R,
      KeyCode::KEY_8, ModifierFlag::SHIFT_L,
      KeyCode::KEY_9, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SHIFT_R, ModifierFlag::SHIFT_L,
      KeyCode::KEY_8, ModifierFlag::SHIFT_L,
      KeyCode::KEY_9, ModifierFlag::SHIFT_L,
    </autogen>

    <!-- This is the basic mapping. -->
    <autogen>
      __KeyOverlaidModifier__
      KeyCode::SHIFT_R,
      KeyCode::SHIFT_R,
      KeyCode::KEY_9, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyOverlaidModifier__
      KeyCode::SHIFT_L,
      KeyCode::SHIFT_L,
      KeyCode::KEY_8, ModifierFlag::SHIFT_R,
    </autogen>
  </item>

  <item>
    <name>Workflowy</name>
    <identifier>private.workflowy_hacks</identifier>
    <only>SAFARI</only>

    <!-- starred pages switch -->
    <autogen>__KeyToKey__ KeyCode::F, VK_CONTROL, KeyCode::SEMICOLON, ModifierFlag::COMMAND_L</autogen>
    <autogen>__KeyToKey__ KeyCode::S, VK_CONTROL, KeyCode::SEMICOLON, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L</autogen>

<autogen>__KeyToKey__ KeyCode::Q, VK_CONTROL, KeyCode::KEYPAD_MULTIPLY, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L</autogen>
    

  </item>

  <item>
    <name>My Excel Hacks (effective only on Excel)</name>
    <appendix>Change Command+2 to Ctrl+U</appendix>
    <appendix>Change Control+A to Home</appendix>
    <appendix>Change Control+E to End</appendix>
    <identifier>private.app_excel_command2_to_ctrlu</identifier>
    <only>EXCEL</only>
    <autogen>__KeyToKey__ KeyCode::KEY_2, VK_COMMAND, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
    <autogen>__KeyToKey__ KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
    <autogen>__KeyToKey__ KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
  </item>


  <item>
    <name>My TrackPad LeftClick Hack</name>
    <appendix>Command+LeftClick to F12 (only on MacBookPro2,1 Trackpad)</appendix>
    <identifier>private.pointing_leftclick2f12_trackpad</identifier>
    <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a</device_only>
    <autogen>__KeyToKey__ PointingButton::LEFT, VK_COMMAND, KeyCode::F12</autogen>
  </item>

  <!-- ============================================================ -->
  <!-- An example of appdef -->
  <appdef>
    <appname>APPSTORE</appname>
    <equal>com.apple.appstore</equal>
  </appdef>

  <item>
    <name>Space to Tab on App Store.app</name>
    <identifier>private.appdef</identifier>
    <only>APPSTORE</only>
    <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
  </item>

  <!-- ============================================================ -->
  <!-- An example of devicevendordef,deviceproductdef -->
  <devicevendordef>
    <vendorname>HEWLETT_PACKARD</vendorname>
    <vendorid>0x03f0</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>MY_HP_KEYBOARD</productname>
    <productid>0x0224</productid>
  </deviceproductdef>

  <item>
    <name>Space to Tab on MY_HP_KEYBOARD</name>
    <identifier>private.deviceproductdef</identifier>
    <device_only>DeviceVendor::HEWLETT_PACKARD, DeviceProduct::MY_HP_KEYBOARD</device_only>
    <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::TAB</autogen>
  </item>

  <!-- ============================================================ -->
</root>